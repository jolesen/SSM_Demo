package com.stylefeng.guns.modular.business.controller;

import com.stylefeng.guns.common.controller.BaseController;
import com.stylefeng.guns.common.exception.DBErrorException;
import com.stylefeng.guns.common.exception.NonullException;
import com.stylefeng.guns.common.exception.RepeatException;
import com.stylefeng.guns.common.persistence.model.User;
import com.stylefeng.guns.core.shiro.ShiroKit;
import com.stylefeng.guns.core.util.ToolUtil;
import com.stylefeng.guns.modular.business.dao.SampleUsedDao;
import com.stylefeng.guns.modular.business.entity.SampleUsed;
import com.stylefeng.guns.modular.business.service.ISampleUsedService;
import com.stylefeng.guns.modular.system.dao.UserMgrDao;

import java.util.List;
import java.util.Map;

import javax.annotation.Resource;
import javax.validation.Valid;

import org.apache.tools.ant.taskdefs.EchoXML;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.PathVariable;

/**
 * 样本领用控制器
 *
 * @author 罗健金
 * @Date 2017-08-24 10:05:50
 */
@Controller
@RequestMapping("/sampleUsed")
public class SampleUsedController extends BaseController {

    @Resource
    private SampleUsedDao sampleUsedDao;
    @Resource
    private UserMgrDao userMgrDao;
    @Resource
    ISampleUsedService sampleUsedService;
    private String PREFIX = "/business/sampleUsed/";

    /**
     * 跳转到样本领用首页
     */
    @RequestMapping("")
    public String index() {
        return PREFIX + "sampleUsed.html";
    }

    /**
     * 跳转到添加样本领用
     */
    @RequestMapping("/sampleUsed_add/{ids}")
    public String sampleUsedAdd( @PathVariable String ids,Model model) {
        model.addAttribute("sampleIds", ids);
        model.addAttribute("username", ShiroKit.getUser().getName());
        return PREFIX + "sampleUsed_add.html";
    }

    /**
     * 跳转到修改样本领用
     */
    @RequestMapping("/sampleUsed_update/{sampleUsedId}")
    public String sampleUsedUpdate(@PathVariable Integer sampleUsedId, Model model) {
        return PREFIX + "sampleUsed_edit.html";
    }

    /**
     * 获取样本领用列表
     */
    @RequestMapping(value = "/list")
    @ResponseBody
    public Object list(String condition) {
        List<Map<String, Object>> sampleUseds = sampleUsedDao.listSampleUsedByCondition(condition);
        return sampleUseds;
    }

    /**
     * 新增样本领用
     */
    @RequestMapping(value = "/add")
    @ResponseBody
    public Object add(@Valid SampleUsed sampleUsed, String sampleIds) {
        sampleUsedService.saveSampleUsed(sampleIds,sampleUsed);
        return SUCCESS_TIP;
    }

    /**
     * 删除样本领用
     */
    @RequestMapping(value = "/delete")
    @ResponseBody
    public Object delete() {
        return SUCCESS_TIP;
    }


    /**
     * 跳往样本详情页面
     * @author 罗健金
     * @date 2017年8月29日
     * @return
     */
    
    @RequestMapping(value = "/sampleUsed_check/{id}")
    public String check(@PathVariable Integer id,Model model) {
        model.addAttribute("sample_id",id);
        return PREFIX + "sampleUsed_detail.html";
    }

    /**
     * 查看样本详情记录的ajax请求
     */
    @RequestMapping(value = "/listDetail/{id}")
    @ResponseBody
    public Object detail(@PathVariable Integer id) {
        List<Map<String, Object>> sampleUseds= sampleUsedService.listHadSampleUsed(id);
        return sampleUseds;
    }
    /**
     * 跳往页面上传界面
     * @author 罗健金
     * @date 2017年8月31日
     * @return
     */
    @RequestMapping(value = "/sampleUsed_toImportFileUI")
    public  String sampleUsed_toImportFileUI() {
        return PREFIX + "sampleUsed_uploadFile.html";
    }
    /**
     * 接受页面传来的文件并处理
     * @author 罗健金
     * @date 2017年8月31日
     * @param uploadFile
     * @return
     */
    @RequestMapping(value = "/importExcel")
    public Object sampleUsed_importExcel(@RequestParam("uploadFile") MultipartFile uploadFile) throws Exception{
        try {
            sampleUsedService.importExcel(uploadFile);
          } catch (Exception e) {
            System.out.println("错误类型：" + e.getMessage());
            throw new DBErrorException("文件格式错误", e.getMessage());
        }
              

      return super.SUCCESS_TIP;
}
}