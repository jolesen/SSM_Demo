package com.stylefeng.guns.modular.system.dao;

import java.util.List;
import java.util.Map;

import org.apache.ibatis.annotations.Param;

import com.stylefeng.guns.common.node.ZTreeNode;
import com.stylefeng.guns.common.persistence.model.Dept;

/**
 * 部门dao
 *
 * @author zmj
 * @since 2017年8月21日
 */
public interface DeptDao {

    /**
     * 获取ztree的节点列表
     *
     * @return
     * @date 2017年2月17日 下午8:28:43
     * 
     */
    List<ZTreeNode> tree();

    List<Map<String, Object>> list(@Param("condition") String condition);
    
    /**
     * 删除部门
     * @param deptId 部门ID
     * @return
     * @since 2017-8-17
     */
    int deleteDeptById(@Param("deptId") Integer deptId);
    
    
    /**
     * 根据角色id删除部门对映的权限
     * @param roleId
     * @return
     */
    int deleteRelationByRoleId(Integer roleId);

    
    /**
     * 查询dr_relation中dept与role是否存在关联
     * @param deptId
     * @return
     */
    Integer selectByDeptId(@Param("deptId") Integer deptId);
    
    
    /**
     * 通过部门查询角色id
     * @param deptId
     * @return
     */
    Integer selectRoleIdByDeptId(@Param("deptId") Integer deptId);
    
    
    /**
     * 通过id获取部门对象
     * @param deptId
     * @return
     */
    Dept selectById(@Param("deptId")Integer deptId);

    
    /**
     * 根据部门Id删除部门角色信息（删除部门时用）
     * @param deptId 部门Id
     * @return
     */
    int deleteRole(@Param("deptId") Integer deptId);
    
    /**
     * 根据部门Id更新关联用户信息（删除部门时用）
     * @param deptId 部门Id
     * @return
     */
    int updateUser(@Param("deptId") Integer deptId);
    
    /**
     * 根据部门Id删除角色菜单关联表信息（删除部门时用）
     * @param deptId 部门Id
     * @return
     */
    int deleteRelation(@Param("deptId") Integer deptId);

}
