package com.stylefeng.guns.modular.business.controller;

import java.util.List;
import java.util.Map;

import javax.annotation.Resource;
import javax.validation.Valid;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.stylefeng.guns.common.controller.BaseController;
import com.stylefeng.guns.common.exception.BizExceptionEnum;
import com.stylefeng.guns.common.exception.BussinessException;
import com.stylefeng.guns.modular.business.dao.DetectionDao;
import com.stylefeng.guns.modular.business.entity.Detection;
import com.stylefeng.guns.modular.business.entity.Sample;
import com.stylefeng.guns.modular.business.service.IDetectionService;

/**
 * 检测结果控制器
 *
 * @author
 * @Date 2017-08-23 15:52:04
 */
@Controller
@RequestMapping("/detection")
public class DetectionController extends BaseController {
	@Resource
	private IDetectionService detectionService;
	@Resource
	private DetectionDao detectionDao;
	
    private String PREFIX = "/business/detection/";

    /**
     * 跳转到检测结果首页
     */
    @RequestMapping("")
    public String index() {
        return PREFIX + "detection.html";
    }

    /**
     * 跳转到添加检测结果
     */
    @RequestMapping("/detection_add")
    public String detectionAdd() {
        return PREFIX + "detection_add.html";
    }

    /**
     * 跳转到修改检测结果
     */
    @RequestMapping("/detection_update/{detectionId}")
    public String detectionUpdate(@PathVariable Integer detectionId, Model model) {
    	Detection detection = detectionService.findDetectionById(detectionId);
        model.addAttribute(detection);
        return PREFIX + "detection_edit.html";
    }

    /**
     * 获取检测结果列表
     */
    @RequestMapping(value = "/list")
    @ResponseBody
    public Object list(String condition) {
    	List<Map<String, Object>> detections = detectionDao.selectSamplesByCondition(condition);
        return detections;
    }

    /**
     * 新增检测结果
     */
    @RequestMapping(value = "/add")
    @ResponseBody
    public Object add(@Valid Detection detection, BindingResult bindingResult) {
    	 if (bindingResult.hasErrors()) {
             throw new BussinessException(BizExceptionEnum.REQUEST_NULL);
         }
         detection.setId(null);
         try {
             Integer insertedRow = detectionDao.insert(detection);
             if (insertedRow <= 0) {
                 throw new BussinessException(BizExceptionEnum.SERVER_ERROR);
             }
         } catch (Exception e) {
             throw new BussinessException(BizExceptionEnum.UNABLE_ERROR);
         }
        return super.SUCCESS_TIP;
    }

    /**
     * 删除检测结果
     */
    @RequestMapping(value = "/delete")
    @ResponseBody
    public Object delete(Integer detectionId) {
    	System.out.println("testetetet");
    	detectionService.deleteById(detectionId);
        return SUCCESS_TIP;
    }


    /**
     * 修改检测结果
     */
    @RequestMapping(value = "/update")
    @ResponseBody
    public Object update(Detection detection) {
    	detectionDao.update(detection);
        return super.SUCCESS_TIP;
    }

    /**
     * 检测结果详情
     */
    @RequestMapping(value = "/detail")
    @ResponseBody
    public Object detail() {
        return null;
    }
}
