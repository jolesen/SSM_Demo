package com.stylefeng.guns.modular.business.controller;

import com.stylefeng.guns.common.controller.BaseController;
import com.stylefeng.guns.common.exception.BizExceptionEnum;
import com.stylefeng.guns.common.exception.BussinessException;
import com.stylefeng.guns.common.exception.DBErrorException;
import com.stylefeng.guns.common.exception.NonullException;
import com.stylefeng.guns.common.exception.RepeatException;
import com.stylefeng.guns.modular.business.dao.SampleDao;
import com.stylefeng.guns.modular.business.entity.Sample;
import com.stylefeng.guns.modular.business.service.ISampleService;
import com.stylefeng.guns.modular.business.service.IThreadSampleService;
import com.stylefeng.guns.modular.business.util.ExcelReader;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;
import com.stylefeng.guns.common.constant.tips.ErrorTip;
import com.stylefeng.guns.common.constant.tips.Tip;
import javax.annotation.Resource;
import javax.naming.NoPermissionException;
import javax.servlet.http.HttpServletResponse;
import javax.validation.Valid;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import com.stylefeng.guns.modular.business.service.IThreadSampleService;
/**
 * 样本控制器
 *
 * @author fengshuonan
 * @author djb
 * @Date 2017-08-09 14:40:25
 */
@Controller
@RequestMapping("/sample")
public class SampleController extends BaseController {

    private String PREFIX = "/business/sample/";
    @Resource
	private IThreadSampleService threadSampleService;
    private Logger log = LoggerFactory.getLogger(this.getClass());
    @Resource
    ISampleService sampleService;
    @Autowired
    private SampleDao sampleDao;
    /**
     * 跳转到样本首页
     */
    @RequestMapping("")
    public String index() {
        return PREFIX + "sample.html";
    }

    /**
     * 跳转到添加样本
     */
    @RequestMapping("/sample_add")
    public String sampleAdd() {
        return PREFIX + "sample_add.html";
    }

    /**
     * 跳转到修改样本
     */
    @RequestMapping(value = "/sample_update/{sample_id}")
    public String sampleUpdate( @PathVariable Integer sample_id, Model model) {
        Sample sample = sampleService.findSampleById(sample_id);
        model.addAttribute(sample);
        return PREFIX + "sample_edit.html";
    }

    /**
     * 跳转到Excel导入页面
     * @return
     */
    @RequestMapping("/sample_uploadFile")
    public String sampleUpload(){
        return PREFIX + "sample_uploadFile.html";
    }

    /**
     * 获取样本列表
     */
    @RequestMapping(value = "/list")
    @ResponseBody
    public Object list(String condition) {
        List<Map<String,Object>> samples=sampleDao.selectSamples();
        return samples;
    }


	/**
	 * 新增样本
	 */
	@RequestMapping(value = "/add")
	@ResponseBody
	public Object add(@Valid Sample sample, BindingResult bindingResult) throws NoPermissionException {
		if (bindingResult.hasErrors()){
		    throw new BussinessException(BizExceptionEnum.REQUEST_NULL);
		}
		sample.setSampleId(null);
		sampleDao.insert(sample);
		return super.SUCCESS_TIP;
	}

	  
    /**
     * 删除样本
     */
    @RequestMapping(value = "/delete")
    @ResponseBody
    public Object delete( Integer sampleId) {
        sampleDao.deleteById(sampleId);
        return SUCCESS_TIP;
    }

    /**
     * 修改样本
     */
    @RequestMapping(value = "/update")
    @ResponseBody
    public Object update(Sample sample) {
        sampleService.updateSample(sample);
        return SUCCESS_TIP;
    }


    /**
     * 样本详情
     */
    @RequestMapping(value = "/detail")
    @ResponseBody
    public Object detail() {
        return null;
    }
    
    /**
     * 导入excel文件
     * @throws Exception 
     */
    @RequestMapping(value = "/importExcel",method = RequestMethod.POST)
    @ResponseBody
    public Tip insertExcel( @RequestParam("uploadFile") MultipartFile  uploadFiles,Model model) throws Exception {
    	
 
    	System.out.println("controller接受到了 "+uploadFiles.getOriginalFilename());
        
    
		List<Sample> list = new ArrayList<Sample>();
				
		try {
			InputStream inputStream=uploadFiles.getInputStream();
			list = ExcelReader.read(inputStream);
		} catch (NonullException e) {
			throw new DBErrorException(e.getErrorInfo(), e.getErrorInfo());
		} catch (Exception e) {
			throw new DBErrorException("文件格式错误", e.getMessage());
		}

		try {
			threadSampleService.inputSamples(list, 0, list.size() - 1);
		} catch (RepeatException e) {
			throw new DBErrorException(e.getErrorInfo(), e.getErrorInfo());
		}
		return SUCCESS_TIP;
	}

    public void setThreadSampleService(IThreadSampleService threadSampleService) {
        this.threadSampleService = threadSampleService;
    }

    public void setSampleService(ISampleService sampleService) {
        this.sampleService = sampleService;
    }

    public void setSampleDao(SampleDao sampleDao) {
        this.sampleDao = sampleDao;
    }
    

}